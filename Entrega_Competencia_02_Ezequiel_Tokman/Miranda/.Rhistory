pdf("historico_cluster5.pdf")
# Initialize an empty list to store ggplot objects
plot_list <- list()
# Loop through the columns and create line plots
for (column in columns_to_plot) {
if (is.numeric(dataset2_grouped_cluster5[[column]])) {
p <- ggplot(dataset2_grouped_cluster5, aes(x = date_custom, y = .data[[column]])) +
geom_line(color = "darkseagreen") +
geom_point(color = "white", size = 3, shape = 21, fill = "darkseagreen") +
labs(x = "date_custom", y = column) +
ggtitle(paste("Cluster 5: evolución del percentil 95 de", column, "\nlos meses previos a darse de baja")) +
theme_bw() +
geom_vline(xintercept = 0, linetype = "dashed", color = "black") +
labs(color = "Legend", linetype = "Legend") +
annotate("text", x = -1, y = quantile(dataset2_grouped_cluster5[[column]], 0.9, na.rm = TRUE), label = "BAJA+2", angle = 90)
plot_list[[column]] <- p
print(p)
}
}
# Close the PDF file
dev.off()
# Initialize an empty list to store ggplot objects
plot_list <- list()
# Creamos PDF.
pdf("historico_cluster6.pdf")
# Loop through the columns and create line plots
for (column in columns_to_plot) {
if (is.numeric(dataset2_grouped_cluster6[[column]])) {
p <- ggplot(dataset2_grouped_cluster6, aes(x = date_custom, y = .data[[column]])) +
geom_line(color = "darkseagreen") +
geom_point(color = "white", size = 3, shape = 21, fill = "darkseagreen") +
labs(x = "date_custom", y = column) +
ggtitle(paste("Cluster 6: evolución del percentil 95 de", column, "\nlos meses previos a darse de baja")) +
theme_bw() +
geom_vline(xintercept = 0, linetype = "dashed", color = "black") +
labs(color = "Legend", linetype = "Legend") +
annotate("text", x = -1, y = quantile(dataset2_grouped_cluster6[[column]], 0.9, na.rm = TRUE), label = "BAJA+2", angle = 90)
plot_list[[column]] <- p
print(p)
}
}
# Close the PDF file
dev.off()
# Creamos PDF.
pdf("historico_cluster7.pdf")
# Initialize an empty list to store ggplot objects
plot_list <- list()
# Loop through the columns and create line plots
for (column in columns_to_plot) {
if (is.numeric(dataset2_grouped_cluster7[[column]])) {
p <- ggplot(dataset2_grouped_cluster7, aes(x = date_custom, y = .data[[column]])) +
geom_line(color = "darkseagreen") +
geom_point(color = "white", size = 3, shape = 21, fill = "darkseagreen") +
labs(x = "date_custom", y = column) +
ggtitle(paste("Cluster 7: evolución del percentil 95 de", column, "\nlos meses previos a darse de baja")) +
theme_bw() +
geom_vline(xintercept = 0, linetype = "dashed", color = "black") +
labs(color = "Legend", linetype = "Legend") +
annotate("text", x = -1, y = quantile(dataset2_grouped_cluster7[[column]], 0.9, na.rm = TRUE), label = "BAJA+2", angle = 90)
plot_list[[column]] <- p
print(p)
}
}
# Close the PDF file
dev.off()
colnames(dataset2)
rm(list = ls()) # remove all objects
gc() # garbage collection
setwd("/Documents and Settings/Digodat/OneDrive - Económicas - UBA/Documentos/Maestría Exactas/EyF/Miranda")
library(data.table)
library(ggplot2)
dataset2 <- fread("./datasets_dataset2_clusters.csv", stringsAsFactors = TRUE)
# Creamos una lista de las columnas que empiezan con "m", ya que son todas las columnas que hay que ajustar por inflación.
columns_starting_with_m <- names(dataset2)[grep("^m", names(dataset2))]
columns_starting_with_m <- columns_starting_with_m[!grepl("mcaja_ahorro_dolares", columns_starting_with_m)]
# Creating a factor_inflation column with values based on the conditions
dataset2[foto_mes == 201901, factor_inflation := NA_real_][
foto_mes == 201902, factor_inflation := 0.0288][
foto_mes == 201903, factor_inflation := 0.0678][
foto_mes == 201904, factor_inflation := 0.1177][
foto_mes == 201905, factor_inflation := 0.1563][
foto_mes == 201906, factor_inflation := 0.1915][
foto_mes == 201907, factor_inflation := 0.2236][
foto_mes == 201908, factor_inflation := 0.2507][
foto_mes == 201909, factor_inflation := 0.3001][
foto_mes == 201910, factor_inflation := 0.3766][
foto_mes == 201911, factor_inflation := 0.4221][
foto_mes == 201912, factor_inflation := 0.4824][
foto_mes == 202001, factor_inflation := 0.5377][
foto_mes == 202002, factor_inflation := 0.5724][
foto_mes == 202003, factor_inflation := 0.6045][
foto_mes == 202004, factor_inflation := 0.6582][
foto_mes == 202005, factor_inflation := 0.6826][
foto_mes == 202006, factor_inflation := 0.7086][
foto_mes == 202007, factor_inflation := 0.7472][
foto_mes == 202008, factor_inflation := 0.7808][
foto_mes == 202009, factor_inflation := 0.8291][
foto_mes == 202010, factor_inflation := 0.8807][
foto_mes == 202011, factor_inflation := 0.9517][
foto_mes == 202012, factor_inflation := 1.0131][
foto_mes == 202101, factor_inflation := 1.0939][
foto_mes == 202102, factor_inflation := 1.1785][
foto_mes == 202103, factor_inflation := 1.2567][
foto_mes == 202104, factor_inflation := 1.3652][
foto_mes == 202105, factor_inflation := 1.4618][
foto_mes == 202106, factor_inflation := 1.5432][
foto_mes == 202107, factor_inflation := 1.6240]
# Assuming 'dt' is your data.table
# Looping through all the columns that need to be adjusted
for (col in columns_starting_with_m) {
dataset2[, (paste0(col, "_new")) := fifelse(foto_mes == 201901, get(col), get(col) - get(col) * factor_inflation)]
}
# Validamos para una columna específica.
# La cuenta que hay que hacer es:
# mtransferencias_recibidas_new = mtransferencias_recibidas - mtransferencias_recibidas * factor_inflation
subset_data_validacion <- dataset2[, .(foto_mes,
mtransferencias_recibidas,
mtransferencias_recibidas_new,
factor_inflation)]
# Eliminamos las columnas viejas
dataset2 <- dataset2[, !(names(dataset2) %in% columns_starting_with_m), with = FALSE]
# Calculamos date_custom
calculate_date_custom <- function(foto_mes, clase_ternaria) {
baja_row_index <- which(clase_ternaria == "BAJA+2")
baja_year <- as.integer(substr(foto_mes[baja_row_index], 1, 4))
baja_month <- as.integer(substr(foto_mes[baja_row_index], 5, 6))
cur_year <- as.integer(substr(foto_mes, 1, 4))
cur_month <- as.integer(substr(foto_mes, 5, 6))
months_diff <- (baja_year - cur_year) * 12 + (baja_month - cur_month)
-months_diff
}
# Set the key for the data.table
setkey(dataset2, numero_de_cliente)
# Calculate date_custom for each numero_de_cliente
dataset2[, date_custom := calculate_date_custom(foto_mes, clase_ternaria), by = numero_de_cliente]
# Algunos dan mal porque no tienen completado clase_ternaria. Los excluimos.
dataset2 <- dataset2[!date_custom > 1]
unique(dataset2$date_custom)
# Validamos para clientes random
client_test <- dataset2[numero_de_cliente == 182617325]
client_test <- dataset2[numero_de_cliente == 57010109]
client_test <- dataset2[numero_de_cliente == 57765533]
client_test <- dataset2[numero_de_cliente == 56808477]
# Agrupamos
cols_to_exclude <- setdiff(names(dataset2), c("clase_ternaria",
"foto_mes",
"numero_de_cliente",
"date_custom",
"rf.cluster",
"factor_inflation"))
# Calculate the median for each group based on data_custom and rf.cluster
dataset2_grouped <- dataset2[, lapply(.SD, median), by = .(date_custom, rf.cluster), .SDcols = cols_to_exclude]
# Hacemos un dt para cada cluster
dataset2_grouped_cluster1 <- dataset2_grouped[rf.cluster == 1]
dataset2_grouped_cluster2 <- dataset2_grouped[rf.cluster == 2]
dataset2_grouped_cluster3 <- dataset2_grouped[rf.cluster == 3]
dataset2_grouped_cluster4 <- dataset2_grouped[rf.cluster == 4]
dataset2_grouped_cluster5 <- dataset2_grouped[rf.cluster == 5]
dataset2_grouped_cluster6 <- dataset2_grouped[rf.cluster == 6]
dataset2_grouped_cluster7 <- dataset2_grouped[rf.cluster == 7]
# Specify specific columns for plotting
columns_to_plot <- c("ctrx_quarter",
"cproductos",
"ctarjeta_debito_transacciones",
"cseguro_vida",
"mcaja_ahorro_new",
"mcaja_ahorro_dolares")
# Creamos PDF.
pdf("historico_cluster1.pdf")
# Initialize an empty list to store ggplot objects
plot_list <- list()
# Loop through the columns and create line plots
for (column in columns_to_plot) {
if (is.numeric(dataset2_grouped_cluster1[[column]])) {
p <- ggplot(dataset2_grouped_cluster1, aes(x = date_custom, y = .data[[column]])) +
geom_line(color = "darkseagreen") +
geom_point(color = "white", size = 3, shape = 21, fill = "darkseagreen") +
labs(x = "date_custom", y = column) +
ggtitle(paste("Cluster 1: evolución de la mediana de", column, "\nlos meses previos a darse de baja")) +
theme_bw() +
geom_vline(xintercept = 0, linetype = "dashed", color = "black") +
labs(color = "Legend", linetype = "Legend") +
annotate("text", x = -1, y = quantile(dataset2_grouped_cluster1[[column]], 0.9, na.rm = TRUE), label = "BAJA+2", angle = 90)
plot_list[[column]] <- p
print(p)
}
}
# Close the PDF file
dev.off()
# Creamos PDF.
pdf("historico_cluster2.pdf")
# Initialize an empty list to store ggplot objects
plot_list <- list()
# Loop through the columns and create line plots
for (column in columns_to_plot) {
if (is.numeric(dataset2_grouped_cluster2[[column]])) {
p <- ggplot(dataset2_grouped_cluster2, aes(x = date_custom, y = .data[[column]])) +
geom_line(color = "darkseagreen") +
geom_point(color = "white", size = 3, shape = 21, fill = "darkseagreen") +
labs(x = "date_custom", y = column) +
ggtitle(paste("Cluster 2: evolución de la mediana de", column, "\nlos meses previos a darse de baja")) +
theme_bw() +
geom_vline(xintercept = 0, linetype = "dashed", color = "black") +
labs(color = "Legend", linetype = "Legend") +
annotate("text", x = -1, y = quantile(dataset2_grouped_cluster2[[column]], 0.9, na.rm = TRUE), label = "BAJA+2", angle = 90)
plot_list[[column]] <- p
print(p)
}
}
# Close the PDF file
dev.off()
# Creamos PDF.
pdf("historico_cluster3.pdf")
# Initialize an empty list to store ggplot objects
plot_list <- list()
# Loop through the columns and create line plots
for (column in columns_to_plot) {
if (is.numeric(dataset2_grouped_cluster3[[column]])) {
p <- ggplot(dataset2_grouped_cluster3, aes(x = date_custom, y = .data[[column]])) +
geom_line(color = "darkseagreen") +
geom_point(color = "white", size = 3, shape = 21, fill = "darkseagreen") +
labs(x = "date_custom", y = column) +
ggtitle(paste("Cluster 3: evolución de la mediana de", column, "\nlos meses previos a darse de baja")) +
theme_bw() +
geom_vline(xintercept = 0, linetype = "dashed", color = "black") +
labs(color = "Legend", linetype = "Legend") +
annotate("text", x = -1, y = quantile(dataset2_grouped_cluster3[[column]], 0.9, na.rm = TRUE), label = "BAJA+2", angle = 90)
plot_list[[column]] <- p
print(p)
}
}
# Close the PDF file
dev.off()
# Creamos PDF.
pdf("historico_cluster4.pdf")
# Initialize an empty list to store ggplot objects
plot_list <- list()
# Loop through the columns and create line plots
for (column in columns_to_plot) {
if (is.numeric(dataset2_grouped_cluster4[[column]])) {
p <- ggplot(dataset2_grouped_cluster4, aes(x = date_custom, y = .data[[column]])) +
geom_line(color = "darkseagreen") +
geom_point(color = "white", size = 3, shape = 21, fill = "darkseagreen") +
labs(x = "date_custom", y = column) +
ggtitle(paste("Cluster 4: evolución de la mediana de", column, "\nlos meses previos a darse de baja")) +
theme_bw() +
geom_vline(xintercept = 0, linetype = "dashed", color = "black") +
labs(color = "Legend", linetype = "Legend") +
annotate("text", x = -1, y = quantile(dataset2_grouped_cluster4[[column]], 0.9, na.rm = TRUE), label = "BAJA+2", angle = 90)
plot_list[[column]] <- p
print(p)
}
}
# Close the PDF file
dev.off()
# Creamos PDF.
pdf("historico_cluster5.pdf")
# Initialize an empty list to store ggplot objects
plot_list <- list()
# Loop through the columns and create line plots
for (column in columns_to_plot) {
if (is.numeric(dataset2_grouped_cluster5[[column]])) {
p <- ggplot(dataset2_grouped_cluster5, aes(x = date_custom, y = .data[[column]])) +
geom_line(color = "darkseagreen") +
geom_point(color = "white", size = 3, shape = 21, fill = "darkseagreen") +
labs(x = "date_custom", y = column) +
ggtitle(paste("Cluster 5: evolución de la mediana de", column, "\nlos meses previos a darse de baja")) +
theme_bw() +
geom_vline(xintercept = 0, linetype = "dashed", color = "black") +
labs(color = "Legend", linetype = "Legend") +
annotate("text", x = -1, y = quantile(dataset2_grouped_cluster5[[column]], 0.9, na.rm = TRUE), label = "BAJA+2", angle = 90)
plot_list[[column]] <- p
print(p)
}
}
# Close the PDF file
dev.off()
# Creamos PDF.
pdf("historico_cluster6.pdf")
# Initialize an empty list to store ggplot objects
plot_list <- list()
# Loop through the columns and create line plots
for (column in columns_to_plot) {
if (is.numeric(dataset2_grouped_cluster6[[column]])) {
p <- ggplot(dataset2_grouped_cluster6, aes(x = date_custom, y = .data[[column]])) +
geom_line(color = "darkseagreen") +
geom_point(color = "white", size = 3, shape = 21, fill = "darkseagreen") +
labs(x = "date_custom", y = column) +
ggtitle(paste("Cluster 6: evolución de la mediana de", column, "\nlos meses previos a darse de baja")) +
theme_bw() +
geom_vline(xintercept = 0, linetype = "dashed", color = "black") +
labs(color = "Legend", linetype = "Legend") +
annotate("text", x = -1, y = quantile(dataset2_grouped_cluster6[[column]], 0.9, na.rm = TRUE), label = "BAJA+2", angle = 90)
plot_list[[column]] <- p
print(p)
}
}
# Close the PDF file
dev.off()
# Creamos PDF.
pdf("historico_cluster7.pdf")
# Initialize an empty list to store ggplot objects
plot_list <- list()
# Loop through the columns and create line plots
for (column in columns_to_plot) {
if (is.numeric(dataset2_grouped_cluster7[[column]])) {
p <- ggplot(dataset2_grouped_cluster7, aes(x = date_custom, y = .data[[column]])) +
geom_line(color = "darkseagreen") +
geom_point(color = "white", size = 3, shape = 21, fill = "darkseagreen") +
labs(x = "date_custom", y = column) +
ggtitle(paste("Cluster 7: evolución de la mediana de", column, "\nlos meses previos a darse de baja")) +
theme_bw() +
geom_vline(xintercept = 0, linetype = "dashed", color = "black") +
labs(color = "Legend", linetype = "Legend") +
annotate("text", x = -1, y = quantile(dataset2_grouped_cluster7[[column]], 0.9, na.rm = TRUE), label = "BAJA+2", angle = 90)
plot_list[[column]] <- p
print(p)
}
}
# Close the PDF file
dev.off()
# Calculate the 60th percentile for each group based on data_custom and rf.cluster, allowing for missing values
dataset2_grouped <- dataset2[, lapply(.SD, function(x) quantile(x, probs = 0.80, na.rm = TRUE)),
by = .(date_custom, rf.cluster), .SDcols = cols_to_exclude]
# Hacemos un dt para cada cluster
dataset2_grouped_cluster1 <- dataset2_grouped[rf.cluster == 1]
dataset2_grouped_cluster2 <- dataset2_grouped[rf.cluster == 2]
dataset2_grouped_cluster3 <- dataset2_grouped[rf.cluster == 3]
dataset2_grouped_cluster4 <- dataset2_grouped[rf.cluster == 4]
dataset2_grouped_cluster5 <- dataset2_grouped[rf.cluster == 5]
dataset2_grouped_cluster6 <- dataset2_grouped[rf.cluster == 6]
dataset2_grouped_cluster7 <- dataset2_grouped[rf.cluster == 7]
# Specify specific columns for plotting
columns_to_plot <- c("ctrx_quarter",
"cproductos",
"ctarjeta_debito_transacciones",
"cseguro_vida",
"mcaja_ahorro_new",
"mcaja_ahorro_dolares")
# Creamos PDF.
pdf("historico_cluster1.pdf")
# Initialize an empty list to store ggplot objects
plot_list <- list()
# Loop through the columns and create line plots
for (column in columns_to_plot) {
if (is.numeric(dataset2_grouped_cluster1[[column]])) {
p <- ggplot(dataset2_grouped_cluster1, aes(x = date_custom, y = .data[[column]])) +
geom_line(color = "darkseagreen") +
geom_point(color = "white", size = 3, shape = 21, fill = "darkseagreen") +
labs(x = "date_custom", y = column) +
ggtitle(paste("Cluster 1: evolución del percentil 80 de", column, "\nlos meses previos a darse de baja")) +
theme_bw() +
geom_vline(xintercept = 0, linetype = "dashed", color = "black") +
labs(color = "Legend", linetype = "Legend") +
annotate("text", x = -1, y = quantile(dataset2_grouped_cluster1[[column]], 0.9, na.rm = TRUE), label = "BAJA+2", angle = 90)
plot_list[[column]] <- p
print(p)
}
}
# Close the PDF file
dev.off()
# Creamos PDF.
pdf("historico_cluster2.pdf")
# Initialize an empty list to store ggplot objects
plot_list <- list()
# Loop through the columns and create line plots
for (column in columns_to_plot) {
if (is.numeric(dataset2_grouped_cluster2[[column]])) {
p <- ggplot(dataset2_grouped_cluster2, aes(x = date_custom, y = .data[[column]])) +
geom_line(color = "darkseagreen") +
geom_point(color = "white", size = 3, shape = 21, fill = "darkseagreen") +
labs(x = "date_custom", y = column) +
ggtitle(paste("Cluster 2: evolución del percentil 80 de", column, "\nlos meses previos a darse de baja")) +
theme_bw() +
geom_vline(xintercept = 0, linetype = "dashed", color = "black") +
labs(color = "Legend", linetype = "Legend") +
annotate("text", x = -1, y = quantile(dataset2_grouped_cluster2[[column]], 0.9, na.rm = TRUE), label = "BAJA+2", angle = 90)
plot_list[[column]] <- p
print(p)
}
}
# Close the PDF file
dev.off()
# Creamos PDF.
pdf("historico_cluster3.pdf")
# Initialize an empty list to store ggplot objects
plot_list <- list()
# Loop through the columns and create line plots
for (column in columns_to_plot) {
if (is.numeric(dataset2_grouped_cluster3[[column]])) {
p <- ggplot(dataset2_grouped_cluster3, aes(x = date_custom, y = .data[[column]])) +
geom_line(color = "darkseagreen") +
geom_point(color = "white", size = 3, shape = 21, fill = "darkseagreen") +
labs(x = "date_custom", y = column) +
ggtitle(paste("Cluster 3: evolución del percentil 80 de", column, "\nlos meses previos a darse de baja")) +
theme_bw() +
geom_vline(xintercept = 0, linetype = "dashed", color = "black") +
labs(color = "Legend", linetype = "Legend") +
annotate("text", x = -1, y = quantile(dataset2_grouped_cluster3[[column]], 0.9, na.rm = TRUE), label = "BAJA+2", angle = 90)
plot_list[[column]] <- p
print(p)
}
}
# Close the PDF file
dev.off()
# Creamos PDF.
pdf("historico_cluster4.pdf")
# Initialize an empty list to store ggplot objects
plot_list <- list()
# Loop through the columns and create line plots
for (column in columns_to_plot) {
if (is.numeric(dataset2_grouped_cluster4[[column]])) {
p <- ggplot(dataset2_grouped_cluster4, aes(x = date_custom, y = .data[[column]])) +
geom_line(color = "darkseagreen") +
geom_point(color = "white", size = 3, shape = 21, fill = "darkseagreen") +
labs(x = "date_custom", y = column) +
ggtitle(paste("Cluster 4: evolución del percentil 80 de", column, "\nlos meses previos a darse de baja")) +
theme_bw() +
geom_vline(xintercept = 0, linetype = "dashed", color = "black") +
labs(color = "Legend", linetype = "Legend") +
annotate("text", x = -1, y = quantile(dataset2_grouped_cluster4[[column]], 0.9, na.rm = TRUE), label = "BAJA+2", angle = 90)
plot_list[[column]] <- p
print(p)
}
}
# Close the PDF file
dev.off()
# Creamos PDF.
pdf("historico_cluster5.pdf")
# Initialize an empty list to store ggplot objects
plot_list <- list()
# Loop through the columns and create line plots
for (column in columns_to_plot) {
if (is.numeric(dataset2_grouped_cluster5[[column]])) {
p <- ggplot(dataset2_grouped_cluster5, aes(x = date_custom, y = .data[[column]])) +
geom_line(color = "darkseagreen") +
geom_point(color = "white", size = 3, shape = 21, fill = "darkseagreen") +
labs(x = "date_custom", y = column) +
ggtitle(paste("Cluster 5: evolución del percentil 80 de", column, "\nlos meses previos a darse de baja")) +
theme_bw() +
geom_vline(xintercept = 0, linetype = "dashed", color = "black") +
labs(color = "Legend", linetype = "Legend") +
annotate("text", x = -1, y = quantile(dataset2_grouped_cluster5[[column]], 0.9, na.rm = TRUE), label = "BAJA+2", angle = 90)
plot_list[[column]] <- p
print(p)
}
}
# Close the PDF file
dev.off()
# Creamos PDF.
pdf("historico_cluster6.pdf")
# Initialize an empty list to store ggplot objects
plot_list <- list()
# Loop through the columns and create line plots
for (column in columns_to_plot) {
if (is.numeric(dataset2_grouped_cluster6[[column]])) {
p <- ggplot(dataset2_grouped_cluster6, aes(x = date_custom, y = .data[[column]])) +
geom_line(color = "darkseagreen") +
geom_point(color = "white", size = 3, shape = 21, fill = "darkseagreen") +
labs(x = "date_custom", y = column) +
ggtitle(paste("Cluster 6: evolución del percentil 80 de", column, "\nlos meses previos a darse de baja")) +
theme_bw() +
geom_vline(xintercept = 0, linetype = "dashed", color = "black") +
labs(color = "Legend", linetype = "Legend") +
annotate("text", x = -1, y = quantile(dataset2_grouped_cluster6[[column]], 0.9, na.rm = TRUE), label = "BAJA+2", angle = 90)
plot_list[[column]] <- p
print(p)
}
}
# Close the PDF file
dev.off()
# Creamos PDF.
pdf("historico_cluster7.pdf")
# Initialize an empty list to store ggplot objects
plot_list <- list()
# Loop through the columns and create line plots
for (column in columns_to_plot) {
if (is.numeric(dataset2_grouped_cluster7[[column]])) {
p <- ggplot(dataset2_grouped_cluster7, aes(x = date_custom, y = .data[[column]])) +
geom_line(color = "darkseagreen") +
geom_point(color = "white", size = 3, shape = 21, fill = "darkseagreen") +
labs(x = "date_custom", y = column) +
ggtitle(paste("Cluster 7: evolución del percentil 80 de", column, "\nlos meses previos a darse de baja")) +
theme_bw() +
geom_vline(xintercept = 0, linetype = "dashed", color = "black") +
labs(color = "Legend", linetype = "Legend") +
annotate("text", x = -1, y = quantile(dataset2_grouped_cluster7[[column]], 0.9, na.rm = TRUE), label = "BAJA+2", angle = 90)
plot_list[[column]] <- p
print(p)
}
}
# Close the PDF file
dev.off()
colnames(dataset2)
# limpio la memoria
rm(list = ls()) # remove all objects
gc() # garbage collection
library(data.table)
library(randomForest)
library(dplyr)
setwd("./buckets/b1/datasets")
getwd()
# Cargamos el dataset original.
dt <- fread("./competencia_02.csv.gz", stringsAsFactors = TRUE)
rm(list = ls()) # remove all objects
gc() # garbage collection
setwd("/Documents and Settings/Digodat/OneDrive - Económicas - UBA/Documentos/Maestría Exactas/EyF/Miranda")
library(data.table)
library(ggplot2)
dataset2 <- fread("./datasets_dataset2_clusters.csv", stringsAsFactors = TRUE)
clientes_por_cluster <-  dataset2[, .N, by = rf.cluster]
clientes_por_cluster
